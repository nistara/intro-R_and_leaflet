[
["interactive-maps-with-r.html", "3 Interactive maps with R", " 3 Interactive maps with R Code for this lesson Learning objectives: After this tutorial, you will be able to create an interactive map in R using the leaflet package. Why interactive maps? While static maps are useful for reports and presentations, interactive maps allow you to pan around and zoom into any part of a your geographic dataset using a web map to put your data into context. Interactive maps also provide options for different interactivity types, for e.g. popups which provide information about your data when clicked on the map. The package we use for making interactive maps is called Leaflet, and it has an excellent documentation website: check it out here. R packages needed for this session library(dplyr) library(leaflet) library(htmlwidgets) Reading in data events = read.csv(&quot;data/sample/event_short.csv&quot;, stringsAsFactors = FALSE) animals = read.csv(&quot;data/sample/animal_short.csv&quot;, stringsAsFactors = FALSE) Check what we just imported # Check what we have: head(events) # What&#39;s the structure of our event data? str(events) Similarly, for the animals data: head(animals) str(animals) Getting unique sites for mapping (to avoid overlapping) sites = events %&gt;% group_by(SiteName, StateProv, District, SiteLatitude, SiteLongitude) %&gt;% summarise(n = n()) Starting with leaflet The leaflet package enables us to create beautiful interactive maps in R. To begin, let’s create an empty map. See what running the following command gives you. leaflet() %&gt;% addTiles() Use a more aesthetic base map, similar to the ones we used in the QGIS session. To see all your options fo extra base maps, see here. leaflet() %&gt;% addProviderTiles(providers$Esri.NatGeoWorldMap) That’s better. Map your data Now, let’s add our site data. We do that with the addCircleMarkers function. If you want to see what arguments it needs, run ?addCircleMarkers in your R console. map_sites = leaflet() %&gt;% addProviderTiles(providers$Esri.NatGeoWorldMap) %&gt;% addCircleMarkers(data = sites, lng = ~SiteLongitude, lat = ~SiteLatitude) map_sites Now adjust the size of the site circle markers. map_sites = leaflet() %&gt;% addProviderTiles(providers$Esri.NatGeoWorldMap) %&gt;% addCircleMarkers(data = sites, lng = ~SiteLongitude, lat = ~SiteLatitude, radius = 4) map_sites Show popups How about we add some popup information? If you click on a point, a popup will display whatever information you set it up to show. map_sites = leaflet() %&gt;% addProviderTiles(providers$Esri.NatGeoWorldMap) %&gt;% addCircleMarkers(data = sites, lng = ~SiteLongitude, lat = ~SiteLatitude, radius = 4, popup = ~SiteName) map_sites For the above, we set it so the Site Name would pop up. We can add much more information from our dataset. # More detailed popups sites$site_info = paste0(&quot;Site name: &quot;, sites$SiteName, &quot;&lt;br&gt;&quot;, &quot;StateProv: &quot;, sites$StateProv, &quot;&lt;br&gt;&quot;, &quot;District: &quot;, sites$District, &quot;&lt;br&gt;&quot;, &quot;Latitude: &quot;, sites$SiteLatitude, &quot;&lt;br&gt;&quot;, &quot;Longitude: &quot;, sites$SiteLongitude) map_site_info = leaflet() %&gt;% addProviderTiles(providers$Esri.NatGeoWorldMap) %&gt;% addCircleMarkers(data = sites, lng = ~SiteLongitude, lat = ~SiteLatitude, radius = 4, popup = ~site_info) map_site_info Adding a country polygon To help put our site locations into context, we import a polygon layer for our country, and display it below the site data. ctry_poly = readRDS(&quot;data/GIS/country_polygons/USA/gadm36_USA_1_sp.rds&quot;) map_ctry_poly = leaflet() %&gt;% addProviderTiles(providers$Esri.NatGeoWorldMap) %&gt;% addPolygons(data = ctry_poly) map_ctry_poly # change the color of the polygon map_ctry_poly = leaflet() %&gt;% addProviderTiles(providers$Esri.NatGeoWorldMap) %&gt;% addPolygons(data = ctry_poly, color = &quot;green&quot;) map_ctry_poly Put it all together map = leaflet() %&gt;% addProviderTiles(providers$Esri.NatGeoWorldMap) %&gt;% addPolygons(data = ctry_poly, color = &quot;green&quot;) %&gt;% addCircleMarkers(data = sites, lng = ~SiteLongitude, lat = ~SiteLatitude, weight = 3, radius = 4, opacity = 0.7, popup = ~site_info) map Give options for turning layers on/off map = leaflet() %&gt;% addProviderTiles(providers$Esri.NatGeoWorldMap, group = &quot;NatGeo&quot;) %&gt;% addPolygons(data = ctry_poly, color = &quot;green&quot;, group = &quot;USA regions&quot;) %&gt;% addCircleMarkers(data = sites, lng = ~SiteLongitude, lat = ~SiteLatitude, weight = 3, radius = 4, opacity = 0.7, popup = ~site_info, group = &quot;Sites&quot;) map = map %&gt;% addLayersControl( overlayGroups = c(&quot;USA regions&quot;, &quot;Sites&quot;), options = layersControlOptions(collapsed = FALSE)) map Add the animal sampling data We add the animal data and use the clusterOptions argument so that leaflet aggregates the numbers for us. # first, let&#39;s map animals as is (without sites) map_animals = leaflet() %&gt;% addProviderTiles(providers$Esri.NatGeoWorldMap, group = &quot;NatGeo&quot;) %&gt;% addPolygons(data = ctry_poly, color = &quot;green&quot;, group = &quot;USA regions&quot;) %&gt;% addCircleMarkers(data = animals, lng = ~SiteLongitude, lat = ~SiteLatitude, weight = 2, radius = 4, group = &quot;Animal clusters&quot;) map_animals # now, let&#39;s try the aggregation argument `clusterOptions`, which enables us to # show numbers of animals map_animals = leaflet() %&gt;% addProviderTiles(providers$Esri.NatGeoWorldMap, group = &quot;NatGeo&quot;) %&gt;% addPolygons(data = ctry_poly, group = &quot;USA regions&quot;) %&gt;% addCircleMarkers(data = animals, lng = ~SiteLongitude, lat = ~SiteLatitude, weight = 2, radius = 4, group = &quot;Animal clusters&quot;, clusterOptions = markerClusterOptions()) map_animals # Finally, let&#39;s add our animal data to the map with event data in it # ============================================================================== map = leaflet() %&gt;% addProviderTiles(providers$Esri.NatGeoWorldMap, group = &quot;NatGeo&quot;) %&gt;% addPolygons(data = ctry_poly, color = &quot;green&quot;, group = &quot;USA regions&quot;) %&gt;% addCircleMarkers(data = sites, lng = ~SiteLongitude, lat = ~SiteLatitude, weight = 3, radius = 4, opacity = 0.7, popup = ~site_info, group = &quot;Sites&quot;) %&gt;% addCircleMarkers(data = animals, lng = ~SiteLongitude, lat = ~SiteLatitude, weight = 2, radius = 4, group = &quot;Animal clusters&quot;, clusterOptions = markerClusterOptions()) map = map %&gt;% addLayersControl( overlayGroups = c(&quot;USA regions&quot;, &quot;Sites&quot;, &quot;Animal clusters&quot;), options = layersControlOptions(collapsed = FALSE)) map Now, save your map saveWidget(map, &quot;map_sites_animal.html&quot;) "]
]
